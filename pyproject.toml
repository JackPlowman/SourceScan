[tool.poetry]
package-mode = false

[tool.poetry.dependencies]
python = "^3.13"
structlog = "24.4.0"
pygithub = "2.5.0"

[tool.poetry.group.dev.dependencies]
pytest = "8.3.4"
pytest-cov = "6.0.0"
ruff = "0.8.2"
vulture = "2.13"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120
target-version = "py313"

[tool.ruff.lint]
# Add the `line-too-long` rule to the enforced rule set.
extend-select = ["E501"]
select = ["ALL"]

ignore = [
  "COM812",  # Ignore due to conflict with Ruff formatter
  "ISC001",  # Ignore due to conflict with Ruff formatter
  "PLR2004", # Ignore magic value
  "D104",    # Ignore missing docstring in public package
  "D100",    # Ignore missing docstring in public module
  "SIM112",  # Ignore Lowercase environment variables (used for GitHub actions)
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"**test_*.py" = ["S101", "D101", "D102", "D103", "SLF001", "FBT001"]
"test_markdown.py" = ["E501"]

[tool.ruff.lint.pydocstyle]
convention = "google" # Use Google docstring convention.

[tool.ruff.lint.isort]
known-first-party = ["scanner", "tests"]

[tool.vulture]
ignore_names = ["side_effect", "project_name", "technologies"]
ignore_decorators = ["dataclass"]
